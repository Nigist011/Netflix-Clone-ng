{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/nigis/Desktop/Netflix/netflix-ng/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/nigis/Desktop/Netflix/netflix-ng/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/nigis/Desktop/Netflix/netflix-ng/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import axios from'./axios';import'./Row.css';import YouTube from'react-youtube';// import movieTrailer from 'movie-trailer';\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var base_url=\"https://image.tmbd.org/t/p/original/\";function Row(_ref){var title=_ref.title,fetchUrl=_ref.fetchUrl;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),movies=_useState2[0],setMovies=_useState2[1];useEffect(function(){function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var request;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(fetchUrl);case 2:request=_context.sent;//consol.log(request.data.results)\nsetMovies(request.data.results);return _context.abrupt(\"return\",request);case 5:case\"end\":return _context.stop();}}},_callee);}));return _fetchData.apply(this,arguments);}fetchData();},[fetchUrl]);var opts={heighr:\"390\",width:\"100%\",playerVars:{autoplay:1}};// const handleClick = (movie) => {\n//   if(trailerUrl){\n//     setTrailerUrl('')\n//   }else {\n//     movieTrailer(movie?.title || movie.original_name)\n//     .then((url) => {\n//       const urlParams = new URLSearchParams(new URL(url).search);\n//       setTrailerUrl(urlParams.get('v'))\n//     })\n//     .catch((error) => console.log(error))\n//   }\n// }\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"h2\",{children:title}),/*#__PURE__*/_jsx(\"div\",{className:\"row__posters\",children:movies.map(function(movie){return/*#__PURE__*/_jsx(\"img\",{// onClick={() => handleClick(movie)}\nclassName:\"row__poster  \\\"row__posterLarge\\\"\",src:\"\".concat(base_url).concat(movie.backdrop_path),alt:movie.name},movie.id);})})]});}export default Row;","map":{"version":3,"sources":["C:/Users/nigis/Desktop/Netflix/netflix-ng/src/Row.js"],"names":["React","useState","useEffect","axios","YouTube","base_url","Row","title","fetchUrl","movies","setMovies","fetchData","get","request","data","results","opts","heighr","width","playerVars","autoplay","map","movie","backdrop_path","name","id"],"mappings":"iXAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAwBC,SAAxB,KAAyC,OAAzC,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,CACA;wFAEA,GAAMC,CAAAA,QAAQ,CAAG,sCAAjB,CACA,QAASC,CAAAA,GAAT,MAA+B,IAAjBC,CAAAA,KAAiB,MAAjBA,KAAiB,CAAVC,QAAU,MAAVA,QAAU,eACJP,QAAQ,CAAC,EAAD,CADJ,wCACxBQ,MADwB,eACjBC,SADiB,eAG/BR,SAAS,CAAC,UAAM,SACGS,CAAAA,SADH,qIACZ,qKAC0BR,CAAAA,KAAK,CAACS,GAAN,CAAUJ,QAAV,CAD1B,QACUK,OADV,eAEI;AACAH,SAAS,CAACG,OAAO,CAACC,IAAR,CAAaC,OAAd,CAAT,CAHJ,gCAIWF,OAJX,wDADY,4CAOZF,SAAS,GAEZ,CATQ,CASN,CAACH,QAAD,CATM,CAAT,CAWA,GAAMQ,CAAAA,IAAI,CAAG,CACTC,MAAM,CAAE,KADC,CAETC,KAAK,CAAE,MAFE,CAGTC,UAAU,CAAE,CACVC,QAAQ,CAAE,CADA,CAHH,CAAb,CAOE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,mBACE,aAAK,SAAS,CAAC,KAAf,wBACE,oBAAKb,KAAL,EADF,cAEE,YAAK,SAAS,CAAC,cAAf,UACGE,MAAM,CAACY,GAAP,CAAW,SAACC,KAAD,qBACV,YAEE;AACA,SAAS,oCAHX,CAIE,GAAG,WAAKjB,QAAL,SACDiB,KAAK,CAACC,aADL,CAJL,CAOE,GAAG,CAAED,KAAK,CAACE,IAPb,EACOF,KAAK,CAACG,EADb,CADU,EAAX,CADH,EAFF,GADF,CAqBD,CAED,cAAenB,CAAAA,GAAf","sourcesContent":["import React, {useState,useEffect } from 'react';\r\nimport axios from './axios';\r\nimport './Row.css';\r\nimport YouTube from 'react-youtube';\r\n// import movieTrailer from 'movie-trailer';\r\n\r\nconst base_url = \"https://image.tmbd.org/t/p/original/\"; \r\nfunction Row({title, fetchUrl}){\r\nconst [movies,setMovies] = useState([]);\r\n\r\nuseEffect(() => {\r\n    async function fetchData() {\r\n        const request = await axios.get(fetchUrl);\r\n        //consol.log(request.data.results)\r\n        setMovies(request.data.results);\r\n        return request;\r\n    }\r\n    fetchData();\r\n\r\n}, [fetchUrl]);\r\n\r\nconst opts = {\r\n    heighr: \"390\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      autoplay: 1,\r\n    }\r\n  }\r\n  // const handleClick = (movie) => {\r\n  //   if(trailerUrl){\r\n  //     setTrailerUrl('')\r\n  //   }else {\r\n  //     movieTrailer(movie?.title || movie.original_name)\r\n  //     .then((url) => {\r\n  //       const urlParams = new URLSearchParams(new URL(url).search);\r\n  //       setTrailerUrl(urlParams.get('v'))\r\n  //     })\r\n  //     .catch((error) => console.log(error))\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <h2>{title}</h2>\r\n      <div className=\"row__posters\">\r\n        {movies.map((movie) => (\r\n          <img\r\n            key={movie.id}\r\n            // onClick={() => handleClick(movie)}\r\n            className={`row__poster  \"row__posterLarge\"`}\r\n            src={`${base_url}${\r\n              movie.backdrop_path\r\n            }`}\r\n            alt={movie.name}\r\n          />\r\n        ))}\r\n      </div>\r\n      {/* <div style={{ padding: \"40px\"}}>\r\n       {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n"]},"metadata":{},"sourceType":"module"}