{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nigis\\\\Desktop\\\\Netflix\\\\netflix-ng\\\\src\\\\Row.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from './axios';\nimport './Row.css';\nimport YouTube from 'react-youtube'; // import movieTrailer from 'movie-trailer';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst base_url = \"https://image.tmbd.org/t/p/original/\";\n\nfunction Row({\n  title,\n  fetchUrl\n}) {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl); //consol.log(request.data.results)\n\n      setMovies(request.data.results);\n      return request;\n    }\n\n    fetchData();\n  }, [fetchUrl]);\n  const opts = {\n    heighr: \"390\",\n    width: \"100%\",\n    playerVars: {\n      autoplay: 1\n    }\n  }; // const handleClick = (movie) => {\n  //   if(trailerUrl){\n  //     setTrailerUrl('')\n  //   }else {\n  //     movieTrailer(movie?.title || movie.original_name)\n  //     .then((url) => {\n  //       const urlParams = new URLSearchParams(new URL(url).search);\n  //       setTrailerUrl(urlParams.get('v'))\n  //     })\n  //     .catch((error) => console.log(error))\n  //   }\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row__posters\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n        // onClick={() => handleClick(movie)}\n        className: `row__poster ${isLargeRow && \"row__posterLarge\"}`,\n        src: `${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n        alt: movie.name\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Row, \"+jZiGaK1IrFkDFSplSYv9W7La4s=\");\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["C:/Users/nigis/Desktop/Netflix/netflix-ng/src/Row.js"],"names":["React","useState","useEffect","axios","YouTube","base_url","Row","title","fetchUrl","movies","setMovies","fetchData","request","get","data","results","opts","heighr","width","playerVars","autoplay","map","movie","isLargeRow","poster_path","backdrop_path","name","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,eAApB,C,CACA;;;AAEA,MAAMC,QAAQ,GAAG,sCAAjB;;AACA,SAASC,GAAT,CAAa;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAb,EAA+B;AAAA;;AAC/B,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBT,QAAQ,CAAC,EAAD,CAAnC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeS,SAAf,GAA2B;AACvB,YAAMC,OAAO,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAUL,QAAV,CAAtB,CADuB,CAEvB;;AACAE,MAAAA,SAAS,CAACE,OAAO,CAACE,IAAR,CAAaC,OAAd,CAAT;AACA,aAAOH,OAAP;AACH;;AACDD,IAAAA,SAAS;AAEZ,GATQ,EASN,CAACH,QAAD,CATM,CAAT;AAWA,QAAMQ,IAAI,GAAG;AACTC,IAAAA,MAAM,EAAE,KADC;AAETC,IAAAA,KAAK,EAAE,MAFE;AAGTC,IAAAA,UAAU,EAAE;AACVC,MAAAA,QAAQ,EAAE;AADA;AAHH,GAAb,CAd+B,CAqB7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA,gBAAKb;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBACGE,MAAM,CAACY,GAAP,CAAYC,KAAD,iBACV;AAEE;AACA,QAAA,SAAS,EAAG,eAAcC,UAAU,IAAI,kBAAmB,EAH7D;AAIE,QAAA,GAAG,EAAG,GAAElB,QAAS,GACfkB,UAAU,GAAGD,KAAK,CAACE,WAAT,GAAuBF,KAAK,CAACG,aACxC,EANH;AAOE,QAAA,GAAG,EAAEH,KAAK,CAACI;AAPb,SACOJ,KAAK,CAACK,EADb;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAvDQrB,G;;KAAAA,G;AAyDT,eAAeA,GAAf","sourcesContent":["import React, {useState,useEffect } from 'react';\r\nimport axios from './axios';\r\nimport './Row.css';\r\nimport YouTube from 'react-youtube';\r\n// import movieTrailer from 'movie-trailer';\r\n\r\nconst base_url = \"https://image.tmbd.org/t/p/original/\"; \r\nfunction Row({title, fetchUrl}){\r\nconst [movies,setMovies] = useState([]);\r\n\r\nuseEffect(() => {\r\n    async function fetchData() {\r\n        const request = await axios.get(fetchUrl);\r\n        //consol.log(request.data.results)\r\n        setMovies(request.data.results);\r\n        return request;\r\n    }\r\n    fetchData();\r\n\r\n}, [fetchUrl]);\r\n\r\nconst opts = {\r\n    heighr: \"390\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      autoplay: 1,\r\n    }\r\n  }\r\n  // const handleClick = (movie) => {\r\n  //   if(trailerUrl){\r\n  //     setTrailerUrl('')\r\n  //   }else {\r\n  //     movieTrailer(movie?.title || movie.original_name)\r\n  //     .then((url) => {\r\n  //       const urlParams = new URLSearchParams(new URL(url).search);\r\n  //       setTrailerUrl(urlParams.get('v'))\r\n  //     })\r\n  //     .catch((error) => console.log(error))\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <h2>{title}</h2>\r\n      <div className=\"row__posters\">\r\n        {movies.map((movie) => (\r\n          <img\r\n            key={movie.id}\r\n            // onClick={() => handleClick(movie)}\r\n            className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\r\n            src={`${base_url}${\r\n              isLargeRow ? movie.poster_path : movie.backdrop_path\r\n            }`}\r\n            alt={movie.name}\r\n          />\r\n        ))}\r\n      </div>\r\n      {/* <div style={{ padding: \"40px\"}}>\r\n       {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n"]},"metadata":{},"sourceType":"module"}